Назначение


Паттерн Builder – помогает организовать пошаговое построение сложного объекта-продукта так, что
клиенту не требуется понимать последовательность шагов и внутреннее устройство строящегося объекта-
продукта, при этом в результате одного и того же процесса конструирования могут получаться объекты-
продукты с различным представлением (внутренним устройством).



Применимость паттерна


Паттерн Строитель рекомендуется использовать, когда:

 Алгоритм пошагового создания сложного объекта-продукта не должен зависеть от того, 
из каких частей состоит объект-продукт и как эти части стыкуются между собой;

 Процесс создания продукта должен обеспечивать возможность получения различных вариаций создаваемого продукта.



Результаты


Паттерн Builder обладает следующими преимуществами:

 Позволяет изменять состав продукта.
Абстрактный класс Builder предоставляет директору набор абстрактных методов (абстрактный интерфейс) для управления построением продукта. 
За абстрактным интерфейсом Builder скрывает внутреннюю структуру создаваемого продукта и процесс его построения. 
Поскольку построение продукта производится согласно абстрактному интерфейсу, 
то для изменения структуры продукта достаточно создать новую разновидность строителя;

 Скрывает код, реализующий конструирование и представление.
Паттерн Builder улучшает модульность, скрывая способы построения и представления сложных объектов-продуктов. 
Клиенты ничего не знают о классах, входящих в состав внутренней структуры продукта, использование этих классов отсутствует в интерфейсе строителя.
Конкретные строители ConcreteBuilder содержат код, необходимый для создания и сборки конкретного вида продукта. 
Код пишется только один раз и разные директоры могут использовать его повторно для построения различных вариантов 
продукта из одних и тех же частей комбинируя эти части.

 Предоставляет полный контроль над процессом построения продукта.
В отличие от других порождающих паттернов, которые сразу конструируют весь объект-продукт полностью, 
строитель строит продукт шаг за шагом под управлением директора.
И только тогда, когда построение продукта завершено, директор или клиент забирают его у строителя. 
Поэтому интерфейс строителя в большей степени отражает процесс пошагового конструирования продукта, 
нежели другие порождающие паттерны. Это позволяет обеспечить полный контроль над процессом конструирования, 
а значит, и над внутренней структурой (комбинацией частей) готового продукта.



Реализация


Обычно используется абстрактный класс Builder, предоставляющий интерфейс для построения каждой отдельной части продукта, который директор может «попросить» создать. В классах конкретных строителей ConcreteBuilder реализуются абстрактные операции абстрактного класса Builder.
Полезные приемы реализации паттерна строитель:

 Интерфейс строителя.
Строители конструируют продукты шаг за шагом. Интерфейс класса Builder должен быть достаточно общим, 
чтобы обеспечить создание продуктов при любой реализации конкретных строителей. Иногда может потребоваться 
доступ к частям уже сконструированного, готового продукта и такую возможность желательно предусмотреть.

 Отсутствие общего базового абстрактного класса для продуктов.
Чаще всего продукты имеют настолько разный состав, что создание для них общего базового класса ничего не дает.